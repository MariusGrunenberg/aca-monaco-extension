!function(e,o){"object"==typeof exports&&"undefined"!=typeof module?o(exports,require("@angular/core"),require("@alfresco/adf-core"),require("@ngrx/effects"),require("rxjs/operators"),require("@alfresco/adf-extensions"),require("ngx-monaco-editor")):"function"==typeof define&&define.amd?define("monaco-extension",["exports","@angular/core","@alfresco/adf-core","@ngrx/effects","rxjs/operators","@alfresco/adf-extensions","ngx-monaco-editor"],o):o(e["monaco-extension"]={},e.ng.core,e["@alfresco/adf-core"],e.effects,e.rxjs.operators,e["@alfresco/adf-extensions"],e["ngx-monaco-editor"])}(this,function(e,o,t,n,r,i,c){"use strict";var a=function(){function e(e){this.apiService=e,this.editorOptions={theme:"vs-dark",language:"json",autoIndent:!0,formatOnPaste:!0,formatOnType:!0}}return e.prototype.onInit=function(e){this.editor=e,this.indentCode()},e.prototype.indentCode=function(){var e=this;setTimeout(function(){e.editor.getAction("editor.action.formatDocument").run()},300)},e.prototype.ngOnInit=function(){var o=this;this.apiService.nodesApi.getFileContent(this.node.id).then(function(e){o.code=e},function(e){return console.log(e)})},e.decorators=[{type:o.Component,args:[{selector:"aca-monaco-view",template:'<ngx-monaco-editor id="adf-monaco-file-editor" class="adf-monaco-file-editor" [options]="editorOptions" [(ngModel)]="code"\n    (onInit)="onInit($event)">\n</ngx-monaco-editor>',encapsulation:o.ViewEncapsulation.None,styles:[".adf-monaco-file-editor{height:100%!important}"]}]}],e.ctorParameters=function(){return[{type:t.AlfrescoApiService}]},e.propDecorators={url:[{type:o.Input}],node:[{type:o.Input}]},e}(),f=function(){function e(){}return e.prototype.saveDocument=function(){console.log("Document Saved!")},e.decorators=[{type:o.Injectable}],e.ctorParameters=function(){return[]},e}();var s=function(){function e(e,o){var t=this;this.actions$=e,this.monacoViewService=o,this.saveDocument$=this.actions$.pipe(n.ofType("MONACO_VIEW_SAVE_ACTION"),r.map(function(e){t.monacoViewService.saveDocument()}))}return e.decorators=[{type:o.Injectable}],e.ctorParameters=function(){return[{type:n.Actions},{type:f}]},function s(e,o,t,n){var r,i=arguments.length,c=i<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,t):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)c=Reflect.decorate(e,o,t,n);else for(var a=e.length-1;0<=a;a--)(r=e[a])&&(c=(i<3?r(c):3<i?r(o,t,c):r(o,t))||c);return 3<i&&c&&Object.defineProperty(o,t,c),c}([n.Effect({dispatch:!1}),function t(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)}("design:type",Object)],e.prototype,"saveDocument$",void 0),e}();function u(){return[a]}var p=function(){function e(e){e.setComponents({"monaco-extension.main.component":a})}return e.decorators=[{type:o.NgModule,args:[{imports:[t.CoreModule.forChild(),n.EffectsModule.forFeature([s]),c.MonacoEditorModule.forRoot()],declarations:u(),exports:u(),entryComponents:u(),providers:[f]}]}],e.ctorParameters=function(){return[{type:i.ExtensionService}]},e}();e.MonacoViewComponent=a,e.components=u,e.AcaMonacoModule=p,e.ɵa=s,e.ɵb=f,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=monaco-extension.umd.min.js.map