{"version":3,"file":"monaco-extension.js.map","sources":["ng://monaco-extension/lib/monaco-view.component.ts","ng://monaco-extension/lib/monaco-view.service.ts","ng://monaco-extension/lib/actions/monaco-view.actions.ts","ng://monaco-extension/lib/effects/monaco-view.effects.ts","ng://monaco-extension/lib/monaco-view.module.ts"],"sourcesContent":["/*!\n * @license\n * Alfresco Example Content Application\n *\n * Copyright (C) 2005 - 2018 Alfresco Software Limited\n *\n * This file is part of the Alfresco Example Content Application.\n * If the software was purchased under a paid Alfresco license, the terms of\n * the paid license agreement will prevail.  Otherwise, the software is\n * provided under the following open source license terms:\n *\n * The Alfresco Example Content Application is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Alfresco Example Content Application is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Alfresco. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\nimport { AlfrescoApiService } from '@alfresco/adf-core';\n\n@Component({\n  selector: 'aca-monaco-view',\n  templateUrl: './monaco-view.component.html',\n  styleUrls: ['./monaco-view.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class MonacoViewComponent implements OnInit {\n  @Input()\n  url: string;\n\n  @Input()\n  node: MinimalNodeEntryEntity;\n  editor: any;\n  code: any;\n  editorOptions = {\n    theme: 'vs-dark',\n    language: 'json',\n    autoIndent: true,\n    formatOnPaste: true,\n    formatOnType: true\n  };\n\n  onInit(editor) {\n    this.editor = editor;\n    this.indentCode();\n  }\n\n  constructor(private apiService: AlfrescoApiService) {}\n\n  indentCode() {\n    setTimeout(() => {\n      this.editor.getAction('editor.action.formatDocument').run();\n    }, 300);\n  }\n\n  ngOnInit() {\n    this.apiService.nodesApi.getFileContent(this.node.id).then(\n      fileContent => {\n        this.code = fileContent;\n      },\n      err => console.log(err)\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class MonacoViewService {\n  constructor() {}\n\n  saveDocument() {\n    console.log('Document Saved!');\n  }\n}\n","import { Action } from '@ngrx/store';\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\n\nexport const MONACO_VIEW_SAVE_ACTION = 'MONACO_VIEW_SAVE_ACTION';\n\nexport class MonacoViewSaveAction implements Action {\n  readonly type = MONACO_VIEW_SAVE_ACTION;\n  constructor() {}\n}\n","import { MonacoViewService } from './../monaco-view.service';\nimport { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { map } from 'rxjs/operators';\nimport {\n  MONACO_VIEW_SAVE_ACTION,\n  MonacoViewSaveAction\n} from '../actions/monaco-view.actions';\n\n@Injectable()\nexport class MonacoViewEffects {\n  constructor(\n    private actions$: Actions,\n    private monacoViewService: MonacoViewService\n  ) {}\n\n  @Effect({ dispatch: false })\n  saveDocument$ = this.actions$.pipe(\n    ofType<MonacoViewSaveAction>(MONACO_VIEW_SAVE_ACTION),\n    map(action => {\n      this.monacoViewService.saveDocument();\n    })\n  );\n}\n","import { MonacoViewService } from './monaco-view.service';\nimport { MonacoViewEffects } from './effects/monaco-view.effects';\nimport { NgModule } from '@angular/core';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { ExtensionService } from '@alfresco/adf-extensions';\nimport { MonacoViewComponent } from './monaco-view.component';\nimport { MonacoEditorModule } from 'ngx-monaco-editor';\nimport { EffectsModule } from '@ngrx/effects';\n\nexport function components() {\n  return [MonacoViewComponent];\n}\n\n@NgModule({\n  imports: [\n    CoreModule.forChild(),\n    EffectsModule.forFeature([MonacoViewEffects]),\n    MonacoEditorModule.forRoot()\n  ],\n  declarations: components(),\n  exports: components(),\n  entryComponents: components(),\n  providers: [MonacoViewService]\n})\nexport class AcaMonacoModule {\n  constructor(extensions: ExtensionService) {\n    extensions.setComponents({\n      'monaco-extension.main.component': MonacoViewComponent\n    });\n  }\n}\n"],"names":["tslib_1.__decorate"],"mappings":";;;;;;;;;;;;;;;;;IAwDE,YAAoB,UAA8B;QAA9B,eAAU,GAAV,UAAU,CAAoB;QAblD,kBAAa,GAAG;YACd,KAAK,EAAE,SAAS;YAChB,QAAQ,EAAE,MAAM;YAChB,UAAU,EAAE,IAAI;YAChB,aAAa,EAAE,IAAI;YACnB,YAAY,EAAE,IAAI;SACnB,CAAC;KAOoD;;;;;IALtD,MAAM,CAAC,MAAM;QACX,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,UAAU,EAAE,CAAC;KACnB;;;;IAID,UAAU;QACR,UAAU,CAAC;YACT,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,8BAA8B,CAAC,CAAC,GAAG,EAAE,CAAC;SAC7D,EAAE,GAAG,CAAC,CAAC;KACT;;;;IAED,QAAQ;QACN,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CACxD,WAAW;YACT,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC;SACzB,EACD,GAAG,IAAI,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CACxB,CAAC;KACH;;;YA1CF,SAAS,SAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,sMAA2C;gBAE3C,aAAa,EAAE,iBAAiB,CAAC,IAAI;;aACtC;;;YAPQ,kBAAkB;;;kBASxB,KAAK;mBAGL,KAAK;;;;;;;ACvCR;IAIE,iBAAgB;;;;IAEhB,YAAY;QACV,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;KAChC;;;YANF,UAAU;;;;;;;;;ACCX,MAAa,uBAAuB,GAAG,yBAAyB;;;;;;;;;;;ICQ9D,YACU,QAAiB,EACjB,iBAAoC;QADpC,aAAQ,GAAR,QAAQ,CAAS;QACjB,sBAAiB,GAAjB,iBAAiB,CAAmB;QAI9C,kBAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAChC,MAAM,CAAuB,uBAAuB,CAAC,EACrD,GAAG,CAAC,MAAM;YACR,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;SACvC,CAAC,CACH,CAAC;KARE;;;YALL,UAAU;;;YAPF,OAAO;YAFP,iBAAiB;;AAiBxBA;IADC,MAAM,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC;;wDAM1B;;;;;;ACtBJ;;;AASA;IACE,OAAO,CAAC,mBAAmB,CAAC,CAAC;CAC9B;AAaD;;;;IACE,YAAY,UAA4B;QACtC,UAAU,CAAC,aAAa,CAAC;YACvB,iCAAiC,EAAE,mBAAmB;SACvD,CAAC,CAAC;KACJ;;;YAhBF,QAAQ,SAAC;gBACR,OAAO,EAAE;oBACP,UAAU,CAAC,QAAQ,EAAE;oBACrB,aAAa,CAAC,UAAU,CAAC,CAAC,iBAAiB,CAAC,CAAC;oBAC7C,kBAAkB,CAAC,OAAO,EAAE;iBAC7B;gBACD,YAAY,EAAE,UAAU,EAAE;gBAC1B,OAAO,EAAE,UAAU,EAAE;gBACrB,eAAe,EAAE,UAAU,EAAE;gBAC7B,SAAS,EAAE,CAAC,iBAAiB,CAAC;aAC/B;;;YAnBQ,gBAAgB;;;;;;;;;;;;;;;"}
